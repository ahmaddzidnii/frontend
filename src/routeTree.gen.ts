/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as appsRouteRouteImport } from './routes/(apps)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as appsDashRouteImport } from './routes/(apps)/dash'
import { Route as appsKrsPengisianRouteImport } from './routes/(apps)/krs.pengisian'
import { Route as appsKrsLihatRouteImport } from './routes/(apps)/krs.lihat'

const appsRouteRoute = appsRouteRouteImport.update({
  id: '/(apps)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const appsDashRoute = appsDashRouteImport.update({
  id: '/dash',
  path: '/dash',
  getParentRoute: () => appsRouteRoute,
} as any)
const appsKrsPengisianRoute = appsKrsPengisianRouteImport.update({
  id: '/krs/pengisian',
  path: '/krs/pengisian',
  getParentRoute: () => appsRouteRoute,
} as any)
const appsKrsLihatRoute = appsKrsLihatRouteImport.update({
  id: '/krs/lihat',
  path: '/krs/lihat',
  getParentRoute: () => appsRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof appsRouteRouteWithChildren
  '/dash': typeof appsDashRoute
  '/login': typeof authLoginRoute
  '/krs/lihat': typeof appsKrsLihatRoute
  '/krs/pengisian': typeof appsKrsPengisianRoute
}
export interface FileRoutesByTo {
  '/': typeof appsRouteRouteWithChildren
  '/dash': typeof appsDashRoute
  '/login': typeof authLoginRoute
  '/krs/lihat': typeof appsKrsLihatRoute
  '/krs/pengisian': typeof appsKrsPengisianRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(apps)': typeof appsRouteRouteWithChildren
  '/(apps)/dash': typeof appsDashRoute
  '/(auth)/login': typeof authLoginRoute
  '/(apps)/krs/lihat': typeof appsKrsLihatRoute
  '/(apps)/krs/pengisian': typeof appsKrsPengisianRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dash' | '/login' | '/krs/lihat' | '/krs/pengisian'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dash' | '/login' | '/krs/lihat' | '/krs/pengisian'
  id:
    | '__root__'
    | '/'
    | '/(apps)'
    | '/(apps)/dash'
    | '/(auth)/login'
    | '/(apps)/krs/lihat'
    | '/(apps)/krs/pengisian'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appsRouteRoute: typeof appsRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(apps)': {
      id: '/(apps)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(apps)/dash': {
      id: '/(apps)/dash'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof appsDashRouteImport
      parentRoute: typeof appsRouteRoute
    }
    '/(apps)/krs/pengisian': {
      id: '/(apps)/krs/pengisian'
      path: '/krs/pengisian'
      fullPath: '/krs/pengisian'
      preLoaderRoute: typeof appsKrsPengisianRouteImport
      parentRoute: typeof appsRouteRoute
    }
    '/(apps)/krs/lihat': {
      id: '/(apps)/krs/lihat'
      path: '/krs/lihat'
      fullPath: '/krs/lihat'
      preLoaderRoute: typeof appsKrsLihatRouteImport
      parentRoute: typeof appsRouteRoute
    }
  }
}

interface appsRouteRouteChildren {
  appsDashRoute: typeof appsDashRoute
  appsKrsLihatRoute: typeof appsKrsLihatRoute
  appsKrsPengisianRoute: typeof appsKrsPengisianRoute
}

const appsRouteRouteChildren: appsRouteRouteChildren = {
  appsDashRoute: appsDashRoute,
  appsKrsLihatRoute: appsKrsLihatRoute,
  appsKrsPengisianRoute: appsKrsPengisianRoute,
}

const appsRouteRouteWithChildren = appsRouteRoute._addFileChildren(
  appsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appsRouteRoute: appsRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
