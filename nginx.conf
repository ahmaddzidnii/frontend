# =================================================================
# NGINX GLOBAL CONFIGURATION
# User: www-data (Debian/Ubuntu) or nginx (CentOS/RHEL)
# =================================================================
# Gunakan user dengan hak akses terbatas untuk keamanan.
user www-data;

# Otomatis deteksi jumlah core CPU untuk performa optimal.
worker_processes auto;

# Path untuk file PID (Process ID) Nginx.
pid /run/nginx.pid;

# Sertakan file konfigurasi modular.
include /etc/nginx/modules-enabled/*.conf;

# Tingkatkan batas file descriptor (file handles) untuk worker process.
# PENTING: Pastikan limit di level OS juga dinaikkan (cek 'ulimit -n').
# Jika tidak, pengaturan ini tidak akan ada efeknya.
worker_rlimit_nofile 65535;

# =================================================================
# EVENTS BLOCK
# Konfigurasi bagaimana Nginx menangani koneksi.
# =================================================================
events {
    # Jumlah maksimum koneksi yang bisa ditangani oleh setiap worker process.
    # Total klien maks = worker_connections * worker_processes.
    worker_connections 4096; # Nilai awal yang aman. Naikkan jika perlu.

    # Gunakan metode 'epoll' yang sangat efisien di Linux.
    use epoll;

    # Izinkan worker untuk menerima beberapa koneksi sekaligus.
    multi_accept on;
}

# =================================================================
# HTTP BLOCK
# Konfigurasi untuk semua server (website).
# =================================================================
http {

    # ==============
    # Basic Settings
    # ==============

    # Aktifkan optimasi sendfile() untuk pengiriman file yang efisien.
    sendfile on;

    # Gabungkan paket TCP kecil menjadi paket yang lebih besar untuk efisiensi.
    tcp_nopush on;

    # Kirim data sesegera mungkin tanpa menunda (baik untuk aplikasi real-time).
    tcp_nodelay on;

    # Tipe MIME dasar untuk file.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;


    # ==============
    # Logging
    # ==============

    # Aktifkan access log dengan buffer untuk mengurangi I/O disk.
    # Sangat penting untuk debugging, analitik, dan keamanan.
    access_log /var/log/nginx/access.log main buffer=16k flush=2s;

    # Catat error dengan level 'error' untuk produksi.
    error_log /var/log/nginx/error.log error;


    # ==============
    # Timeouts
    # ==============

    # Atur timeout untuk menjaga koneksi tetap terbuka (keep-alive).
    # Nilai 65 detik adalah standar yang baik.
    keepalive_timeout 65;
    keepalive_requests 100;

    # Timeout untuk membaca body request dari klien.
    client_body_timeout 12;

    # Timeout untuk mengirim respons ke klien.
    client_header_timeout 12;
    send_timeout 10;

    # Tutup koneksi jika klien berhenti merespons.
    reset_timedout_connection on;


    # ==============
    # Gzip Compression
    # ==============

    # Aktifkan kompresi Gzip untuk mengurangi ukuran file.
    gzip on;
    gzip_vary on; # Memberitahu proxy untuk cache versi terkompresi & tidak.
    gzip_proxied any; # Kompresi untuk semua request yang di-proxy.
    gzip_comp_level 5; # Keseimbangan baik antara CPU dan rasio kompresi.
    gzip_min_length 1000; # Jangan kompresi file yang lebih kecil dari 1KB.
    gzip_disable "msie6"; # Nonaktifkan untuk browser IE6 yang bermasalah.
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;


    # ==============
    # Buffers
    # ==============

    # Atur ukuran buffer untuk body request. Penting untuk upload file.
    client_body_buffer_size 128k;
    client_max_body_size 10m; # Batas maks upload file (contoh: 10MB).


    # ==============
    # File Caching
    # ==============
    
    # Cache metadata file yang sering diakses.
    # Nilai 'max' harus disesuaikan dengan jumlah file unik yang sering diakses.
    open_file_cache max=10000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;


    # =================================================================
    # VIRTUAL HOSTS
    # Sertakan file konfigurasi untuk setiap website/server block.
    # =================================================================
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}